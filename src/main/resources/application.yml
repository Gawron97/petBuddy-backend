spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/pet-buddy
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.PostgreSQL94Dialect
      hibernate:
        order_by.default_null_ordering: last
    show-sql: false
  profiles:
    active: dev

  # import data for database
  config:
    import:
      - classpath:animal-data.yml
      - classpath:animal-attribute-data.yml
      - classpath:amenity-data.yml
      - classpath:animal-amenity-data.yml

keycloak:
  resource-roles-claim: "pet-buddy-client"
  claim-name: "preferred_username"

logging:
  level:
    root: INFO
    com:
      example:
        petbuddybackend:
          config:
            security:
              com.example.petbuddybackend.config.security.QueryTokenResolver: TRACE
          controller:
            ChatWebSocketController: DEBUG
            WebSocketController: DEBUG

    # Spring Security logging (for debugging authentication issues)
    org:
      springframework:
        security: DEBUG
        security.web: DEBUG
        security.web.authentication: DEBUG
        security.web.authentication.AnonymousAuthenticationFilter: DEBUG
        security.web.authentication.UsernamePasswordAuthenticationFilter: DEBUG
        security.web.csrf: DEBUG # If CSRF is related to your issue

      # WebSocket-specific logging
      web:
        socket: DEBUG
      springframework.web.socket: DEBUG
      springframework.web.socket.handler: DEBUG
      springframework.web.socket.server: DEBUG
      springframework.web.socket.messaging: DEBUG
      springframework.messaging: DEBUG

    # Spring Messaging and Stomp for WebSockets
    org.springframework.messaging.simp: DEBUG
    org.springframework.messaging.simp.broker: DEBUG
    org.springframework.messaging.simp.stomp: DEBUG
    org.springframework.messaging.simp.user: DEBUG
    org.springframework.messaging.support: DEBUG

    # For inbound and outbound channel logging
    org.springframework.messaging.interceptor: DEBUG
    org.springframework.messaging.channel.ExecutorSubscribableChannel: TRACE

    # If using Spring's DefaultHandshakeHandler for WebSocket connections
    org.springframework.web.socket.server.support.DefaultHandshakeHandler: DEBUG


server:
  port: 8081

sentry:
  dsn: https://aea7d4722318a9965e1ef62e26a4109b@o4507593891184640.ingest.de.sentry.io/4507593901998160

springdoc:
  api-docs:
    path: "/api-docs"
  swagger-ui:
    path: "/swagger-ui.html"

header-name:
  timezone: "Accept-Timezone"
  role: "Accept-Role"

url:
  chat:
    topic:
      base: "/topic/messages"
      pattern: "/topic/messages/%d/%s"
  session:
    topic:
      base: "/topic/session"
      pattern: "/topic/session/%s"
